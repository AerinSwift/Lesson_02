# 1. Создать список и заполнить его элементами различных типов данных.
# Реализовать скрипт проверки типа данных каждого элемента.
# Использовать функцию type() для проверки типа.
# Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.

print("Список с элементами различных типов данных, с указанием этих типов.")
el_str = 'Строка'
el_int = 6
el_float = 6.66
el_complex = complex(1, 2)
el_bool = True

result_list = [el_str, el_int, el_float, el_complex, el_bool]

for el in result_list:
    print(el, type(el))


# 2. Для списка реализовать обмен значений соседних элементов.
# Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т. д.
# При нечётном количестве элементов последний сохранить на своём месте.
# Для заполнения списка элементов нужно использовать функцию input().

replacement_list = []
replacement_str = input("Введите элементы списка. Элементы будут переставлены местами попарно.")
for el in replacement_str:
    replacement_list.append(el)
print("Первоначальный порядок элементов в списке: ", replacement_list)

index = 0
for i in range(int(len(replacement_list) / 2)):
    replacement_list[index], replacement_list[index + 1] = replacement_list[index + 1], replacement_list[index]
    index += 2
print("Порядок элементов в списке после перестановки соседних элементов:", replacement_list)


# 3. Пользователь вводит месяц в виде целого числа от 1 до 12.
# Сообщить, к какому времени года относится месяц (зима, весна, лето, осень).
# Напишите решения через list и dict.

user_month = int(input("Введите номер месяца в виде целого числа от 1 до 12."))

seasons_dict = {1: "Зима", 2: "Зима", 3: "Весна", 4: "Весна", 5: "Весна", 6: "Лето",
                7: "Лето", 8: "Лето", 9: "Осень", 10: "Осень", 11: "Осень", 12: "Зима"}
dict_result = seasons_dict.get(user_month)
print("Время года (по словарю): ", dict_result)

seasons_list = ["Зима", "Зима", "Весна", "Весна", "Весна", "Лето", "Лето", "Лето", "Осень", "Осень", "Осень", "Зима"]
list_result = seasons_list[user_month-1]
print("Время года (по списку): ", list_result)


# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами.
# Вывести каждое слово с новой строки. Строки нужно пронумеровать.
# Если слово длинное, выводить только первые 10 букв в слове.

print("Введите строку из нескольких слов, разделенных пробелами.")
user_str = input("Каждое слово будет выведено с новой строки, в нумерованном списке.")

user_list = user_str.split(' ')

for el in enumerate(user_list):
    el_str = str(el)
    cut = el_str[:15]
    print(cut)


# 5. Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, который не возрастает.
# У пользователя нужно запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями,
# то новый элемент с тем же значением должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввёл число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввёл число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввёл число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать сразу в коде, например, my_list = [7, 5, 3, 3, 2].

rating_list = [7, 5, 3, 3, 2]
print("Текущий рейтинг:", rating_list)
new_element = int(input("Введите новый элемент рейтинга (натуральное число)"))
last_index = len(rating_list) - 1
rating_index = 0
for el in rating_list:
    if new_element > el:
        rating_index = rating_list.index(el)
        rating_list.insert(rating_index, new_element)
        break
    else:
        if rating_list.index(el) == last_index:
            rating_list.append(new_element)

print(rating_list)


# 6. *Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре.
# В кортеже должно быть два элемента — номер товара и словарь с параметрами,
# то есть характеристиками товара: название, цена, количество, единица измерения.
# Структуру нужно сформировать программно, запросив все данные у пользователя.
# Пример готовой структуры:
# [
#    (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
#    (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
#    (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]
# Нужно собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара,
# например, название. Тогда значение — список значений-характеристик, например, список названий товаров.

# Пример:
# {
#    “название”: [“компьютер”, “принтер”, “сканер”],
#    “цена”: [20000, 6000, 2000],
#    “количество”: [5, 2, 7],
#    “ед”: [“шт.”]
# }
